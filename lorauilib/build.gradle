plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace 'com.moko.lib.loraui'
    compileSdk 34

    defaultConfig {
        minSdk 26
        targetSdk 34
        versionCode 4
        versionName "1.0.4"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }

}

// 增加上传源码的task
task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = "sources"
}

publishing {
    repositories { RepositoryHandler handler ->
        handler.mavenLocal()  // 发布到默认的 本地maven 仓库 ，路径： USER_HOME/.m2/repository/  或 setting.xml中配置的路径
    }

    // publications 用于定义发布任务的配置块
    publications {
        // 这个 aarAndroid 可以随便填，只是一个任务名字而已
        // MavenPublication必须有，这个是调用的任务类
        aarAndroid(MavenPublication) {
            // 这里头是artifacts的配置信息，不填会采用默认的
            groupId = 'com.github.MOKO-Android-Base-Library'
            artifactId = 'MKLoRaUILib'
            version = '1.0.4'

            // 增加上传源码的 task
            artifact sourceJar
            // 必须有这个 否则不会上传AAR包  将bundleReleaseAar任务的单个输出文件作为发布的AAR文件。这样，该AAR文件就会成为 MavenPublication 的 artifact 并进行发布
            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
        }
    }
}


dependencies {
    api 'androidx.appcompat:appcompat:1.6.1'
    api 'com.guolindev.permissionx:permissionx:1.7.1'
    api 'com.github.GrenderG:Toasty:1.4.1'
    api 'androidx.constraintlayout:constraintlayout:2.1.4'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.recyclerview:recyclerview:1.3.0'
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
}